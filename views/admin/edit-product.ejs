<%-include('admin-header')-%>
    <section>
        <div class="container">


            <form id="myForm" method="post" product-id="<%=product._id%>" enctype="multipart/form-data">
                <div class="mb-3 w-75 pt-5 mt-5">
                    <label for="name" class="form-label">Productname</label>
                    <input type="text" class="form-control" name="name" id="name" aria-describedby="emailHelp"
                        value="<%=product.name%>">
                    <%if (errors&&errors.name){%>
                        <span class="text-danger">
                            <%=errors.name.msg%>
                        </span>
                        <%}%>
                </div>
                <div class="mb-3 w-75">
                    <label for="price" class="form-label">Price</label>
                    <input type="text" class="form-control" name="price" id="productprice" value="<%=product.price%>">
                    <%if (errors&&errors.price){%>
                        <span class="text-danger">
                            <%=errors.price.msg%>
                        </span>
                        <%}%>
                </div>
                <div class="mb-3 w-75 ">


                   
                    <div class="input-group mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text" span-id="image">Upload</span>
                        </div>
                        <div class="custom-file">
                            <input type="file" class="custom-file-input addProductImg" id="image"
                                aria-describedby="UPLOADBASICIMG" name="image">
                            <label class="custom-file-label" for="image"> Main Image </label>
                        </div>
                    </div>

                    <%if (errors&&errors.image){%>
                        <span class="text-danger">
                            <%=errors.image.msg%>
                        </span>
                        <%}%>
                </div>

                <div style="margin-left: 17%;margin-top: 5%;margin-bottom: 5%;" class=" d-flex">

                    <% for (let i=0; i < product.image.length; i++) { %>
                        <img src="http://localhost:3000/<%= product.image[i] %>" style="height: 40px;width: 60px;"
                            alt="image">

                        <a href="/adminauth/deleteImages/<%=product._id %>/<%=product.image[i]  %>" class="text-danger"
                            onclick="return confirm('Are you sure want to delete this product?')"><i
                                class="fas fa-trash fa-lg mx-1"></i></a>
                        <% } %>
                </div>
                <div class="mb-3 w-75">
                    <label for="">Select Categorie</label>
                    <select name="categorieId" id="" class="form-control">
                        <option value="">choose...</option>
                        <% for( let categorie of categorylist) { %>
                            <option value="<%= categorie._id %>">
                                <%= categorie.name %>
                            </option>
                            <% } %>
                    </select>
                </div>
                <div class="mb-3 w-75">
                    <label for="">Select Brand</label>
                    <select name="brandId" id="" class="form-control">
                        <option value="">choose...</option>
                        <% for( let brand of brandlist ) { %>
                            <option value="<%= brand._id %>">
                                <%= brand.name %>
                            </option>
                            <% } %>
                    </select>
                </div>
                <div class="mb-3 w-75">
                    <label for="stock" class="form-label">Stock</label>
                    <input type="text" class="form-control" name="countInStock" id="stock"
                        value="<%=product.countInStock%>">
                    <%if (errors&&errors.countInStock){%>
                        <span class="text-danger">
                            <%=errors.countInStock.msg%>
                        </span>
                        <%}%>
                </div>
                <div class="mb-3 w-75">
                    <label for="Brand" class="form-label">Description</label>
                    <textarea style="width:822px;height: 150px;" id="brand" name="description" rows="5"
                        cols="108"><%=product.description%></textarea>
                    <%if (errors&&errors.description){%>
                        <span class="text-danger">
                            <%=errors.description.msg%>
                        </span>
                        <%}%>
                </div>

                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </section>
    <div id="modal"
        style="position: absolute;top:0 ; z-index: 11; height: 100%; width: 100vw; background-color: rgba(0, 0, 0, 0.479);"
        class="d-flex d-none justify-content-center align-items-center ">

        <div class=" d-flex flex-column justify-content-center"
            style=" background-color: rgb(255, 255, 255); height: 450px ; width: 50%; ">

            <div style="height: 80%;" class="  d-flex justify-content-center align-items-center ">

                <img id="cropImg" style="height: 90% ;width:80%;" alt="">

            </div>

            <div class="d-flex  justify-content-center ">
                <button id="cropBtn" class="nav-link mt-4 mb-4"
                    style="background-color: black; color:whitesmoke ;padding :10px"> CROP THE
                    IMG</button>

            </div>





        </div>
    </div>







    <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"> -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const fileInputs = document.querySelectorAll('.addProductImg');
            const cropImg = document.getElementById('cropImg');
            const cropModal = document.getElementById('modal');
            const cropBtn = document.getElementById('cropBtn');
            let cropper;
            let croppedDataUrls = {};

            fileInputs.forEach((fileInput) => {
                fileInput.addEventListener('change', (e) => {
                    const reader = new FileReader();

                    reader.onload = (e) => {
                        if (e.target.result) {
                            cropImg.src = e.target.result;
                            cropModal.classList.remove('d-none');
                            // const imgName = 'image'; // Change this to match your input field name
                            const imgName = fileInput.getAttribute('name');
                            let newCropper = new Cropper(cropImg, {
                                viewMode: 1,
                            });

                            window.scrollTo(0, 0);
                            cropper = { [imgName]: newCropper };
                        }
                    };

                    reader.readAsDataURL(e.target.files[0]);
                });
            });

            cropBtn.addEventListener('click', function () {
                console.log(cropper);

                if (cropper) {
                    for (const key in cropper) {
                        let span = document.querySelector(`[span-id="${key}"]`);
                        console.log(span);
                        span.style.backgroundColor = '#4d5154';
                        span.style.color = 'white';
                        croppedDataUrls[key] = cropper[key].getCroppedCanvas().toDataURL('image/jpeg');
                        cropper[key].destroy();
                        cropper = {};
                        break;
                    }

                    console.log(croppedDataUrls);
                    cropModal.classList.toggle('d-none');
                }
            });

            const form = document.getElementById('myForm');
            const productID = form.getAttribute('product-id');

            form.addEventListener('submit', function (event) {
                event.preventDefault();
                const formData = new FormData(form);
              


                for (const key in croppedDataUrls) {
                    let keyVal = key;
                    formData.delete(keyVal);
                    const blob = dataURLtoBlob(croppedDataUrls[keyVal]);
                    formData.append(keyVal, blob, 'productImg.jpg');
                }
                const formDataObject = {};
                formData.forEach((value, key) => {
                    formDataObject[key] = value;
                });
                console.log(formDataObject.image)

                

                // const currentURL = window.location.origin;
                console.log(formData)

                fetch('/adminauth/updateproduct/' + productID, {
                    method: 'POST',
                    body: formData,
                })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.success) {
                            // window.location.href = '/userauth/products'
                            window.history.back();

                        } else {
                            console.error('Error:');
                        }
                    })
                    .catch((error) => {
                        alert('Failed to update product due to local/network issues');
                        console.error('Error:', error);
                    });
            });

            function dataURLtoBlob(dataURL) {
                const parts = dataURL.split(',');
                const data = parts[1];
                const mimeString = parts[0].split(':')[1].split(';')[0];
                const byteString = atob(data);
                const ab = new ArrayBuffer(byteString.length);
                const ia = new Uint8Array(ab);

                for (let i = 0; i < byteString.length; i++) {
                    ia[i] = byteString.charCodeAt(i);
                }

                return new Blob([ab], { type: mimeString });
            }
        });

    </script>
    <%-include('admin-footer')-%>